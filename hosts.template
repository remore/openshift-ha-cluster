[OSEv3:vars]

###########################################################################
### Ansible Vars
###########################################################################
timeout=60
ansible_become=yes
ansible_ssh_user=ec2-user

# disable memory check, as we are not a production environment
openshift_disable_check="memory_availability"

# ------ Customized Part Start ------
# general settings
openshift_deployment_type=openshift-enterprise
openshift_node_groups=[{'name': 'node-config-master', 'labels': ['node-role.kubernetes.io/master=true','runtime=docker']}, {'name': 'node-config-infra', 'labels': ['node-role.kubernetes.io/infra=true','runtime=docker']}, {'name': 'node-config-compute', 'labels': ['node-role.kubernetes.io/compute=true','runtime=docker'], 'edits': [{ 'key': 'kubeletArguments.pods-per-core','value': ['20']}]}]
#openshift_release=v3.9.27
os_sdn_network_plugin_name='redhat/openshift-ovs-networkpolicy'

# Deploy Operator Lifecycle Manager Tech Preview
openshift_enable_olm=true

oreg_url=registry.redhat.io/openshift3/ose-${component}:${version}
oreg_auth_user=___REGISTRY_USER___
oreg_auth_password=___REGISTRY_PASSWORD___

# For Operator Framework Images
openshift_additional_registry_credentials=[{'host':'registry.connect.redhat.com','user':'___REGISTRY_USER___','password':'___REGISTRY_PASSWORD___','test_image':'mongodb/enterprise-operator:0.3.2'}]

# Set this line to enable NFS
openshift_enable_unsupported_configurations=True

# master settings
openshift_master_cluster_hostname=loadbalancer.___GUID___.internal
openshift_master_cluster_public_hostname=loadbalancer.___GUID___.example.opentlc.com
openshift_master_default_subdomain=apps.___GUID___.example.opentlc.com
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]
openshift_master_htpasswd_file=/opt/work/openshift-ha-cluster/htpasswd

# registry
openshift_hosted_registry_storage_kind=nfs
openshift_hosted_registry_storage_access_modes=['ReadWriteMany']
openshift_hosted_registry_storage_host=support1.___GUID___.internal
openshift_hosted_registry_storage_nfs_directory=/srv/nfs
openshift_hosted_registry_storage_volume_name=registry
openshift_hosted_registry_storage_volume_size=10Gi

# logging(EFK)
openshift_logging_install_logging=true
openshift_logging_install_eventrouter=true # Send event logs which is scraped via kubernetes API to EFK stack (so that you will be able to see the preserved result of `oc get events`)
openshift_logging_storage_kind=nfs
openshift_logging_storage_access_modes=['ReadWriteOnce']
openshift_logging_storage_nfs_directory=/srv/nfs
openshift_logging_storage_nfs_options='*(rw,root_squash)'
openshift_logging_storage_volume_name=logging
openshift_logging_storage_volume_size=10Gi
openshift_logging_storage_labels={'storage': 'logging'}
openshift_logging_es_cluster_size=1
openshift_logging_es_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_kibana_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_curator_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_eventrouter_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_curator_default_days=2
openshift_logging_es_memory_limit=8Gi

# metrics(hawkular/heapster)
openshift_metrics_install_metrics=true
openshift_metrics_storage_kind=nfs
openshift_metrics_storage_access_modes=['ReadWriteOnce']
openshift_metrics_storage_nfs_directory=/srv/nfs
openshift_metrics_storage_nfs_options='*(rw,root_squash)'
openshift_metrics_storage_volume_name=metrics
openshift_metrics_storage_volume_size=10Gi
openshift_metrics_storage_labels={'storage': 'metrics'}
openshift_metrics_cassandra_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_hawkular_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_heapster_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_duration=2

# service catalog
openshift_enable_service_catalog=true

# template service broker
template_service_broker_install=true

# prometheus
openshift_hosted_prometheus_deploy=true
openshift_prometheus_namespace=openshift-metrics
openshift_prometheus_node_selector={"node-role.kubernetes.io/infra":"true"}
openshift_cluster_monitoring_operator_install=true

openshift_prometheus_storage_type='emptydir'
openshift_prometheus_alertmanager_storage_type='emptydir'
openshift_prometheus_alertbuffer_storage_type='emptydir'
openshift_prometheus_memory_requests=2Gi
openshift_prometheus_cpu_requests=750m
openshift_prometheus_memory_limit=2Gi
openshift_prometheus_cpu_limit=750m
openshift_prometheus_alertmanager_memory_requests=300Mi
openshift_prometheus_alertmanager_cpu_requests=200m
openshift_prometheus_alertmanager_memory_limit=300Mi
openshift_prometheus_alertmanager_cpu_limit=200m
openshift_prometheus_alertbuffer_memory_requests=300Mi
openshift_prometheus_alertbuffer_cpu_requests=200m
openshift_prometheus_alertbuffer_memory_limit=300Mi
openshift_prometheus_alertbuffer_cpu_limit=200m

# grafana
# === Note ===
# Somehow you still need to type this command with v3.10 (and you will get weird "serviceaccounts prometheus-k8s not found" error but it looks working anyways):
#  $ ansible-playbook /usr/share/ansible/openshift-ansible/playbooks/openshift-grafana/config.yml
# ============
openshift_hosted_grafana_deploy=true
openshift_grafana_node_selector={"node-role.kubernetes.io/infra":"true"}
openshift_grafana_storage_type='emptydir'
openshift_grafana_node_exporter=true

# ------ Customized Part Finished ------

###########################################################################
### OpenShift Hosts
###########################################################################
[OSEv3:children]
lb
masters
etcd
nodes
nfs

[lb]
loadbalancer.___GUID___.internal

[masters]
master1.___GUID___.internal
master2.___GUID___.internal
master3.___GUID___.internal

[etcd]
master1.___GUID___.internal
master2.___GUID___.internal
master3.___GUID___.internal

[nodes]
## These are the masters
master1.___GUID___.internal openshift_hostname=master1.___GUID___.internal openshift_node_group_name='node-config-master' openshift_node_problem_detector_install=true
master2.___GUID___.internal openshift_hostname=master2.___GUID___.internal openshift_node_group_name='node-config-master' openshift_node_problem_detector_install=true
master3.___GUID___.internal openshift_hostname=master3.___GUID___.internal openshift_node_group_name='node-config-master' openshift_node_problem_detector_install=true

## These are infranodes
infranode1.___GUID___.internal openshift_hostname=infranode1.___GUID___.internal openshift_node_group_name='node-config-infra' openshift_node_problem_detector_install=true
infranode2.___GUID___.internal openshift_hostname=infranode2.___GUID___.internal openshift_node_group_name='node-config-infra' openshift_node_problem_detector_install=true

## These are regular nodes
node1.___GUID___.internal openshift_hostname=node1.___GUID___.internal openshift_node_group_name='node-config-compute' openshift_node_problem_detector_install=true
node2.___GUID___.internal openshift_hostname=node2.___GUID___.internal openshift_node_group_name='node-config-compute' openshift_node_problem_detector_install=true
node3.___GUID___.internal openshift_hostname=node3.___GUID___.internal openshift_node_group_name='node-config-compute' openshift_node_problem_detector_install=true

[nfs]
support1.___GUID___.internal openshift_hostname=support1.___GUID___.internal
